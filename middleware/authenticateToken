const jwt = require('jsonwebtoken')
const RedisClient = require('../utils/redis')

const redisClient =new RedisClient()

const  authenticateToken = async (req, res, next) => {
    const accessToken = req.cookies.accessToken
    if (!accessToken) {
        console.log('cookie: unauthorized')
        res.status(401).json({ error: 'Unauthorized' })
        return
    }

    try {
        //verifying access token
        jwt.verify(accessToken, process.env.ACCESS_SECRET_TOKEN, (error, decoded) => {
            if (error) {
                console.log('the token is invalid')
                res.status(403).json({ error: 'Invalid token' })
                return
            }
            try {
                const isBlacklisted = redisClient.isTokenBlacklisted(accessToken)
                if (isBlacklisted) {
                    console.error('Token has expired')
                    res.status(401).json({ error: 'Access token is expired'})
                    return
                }

                req.user = decoded;

                next()
            } catch(redisError) {
                console.error('error checking redis blacklist',redisError)
                res.status(500).json({ error: 'internal server error' })
                return
            }
        })

    } catch(error) {
        console.log('Error verifying access token', error)
        res.status(500).json({ error: 'Internal server error' })
    }
}

module.exports = authenticateToken